name: SonarCloud Analysis

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 6 * * 1'  # Каждый понедельник в 6 утра

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Полная история для анализа

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest-cov

    - name: Setup environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV
        echo "SECRET_KEY=test-key-for-sonarcloud" >> $GITHUB_ENV
        echo "DEBUG=False" >> $GITHUB_ENV
        echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> $GITHUB_ENV

    - name: Run database migrations
      run: |
        python manage.py migrate

    - name: Run tests with coverage
      run: |
        coverage run --source=. --omit="*/migrations/*,*/tests/*,*/settings.py,*/manage.py" -m pytest
        coverage xml

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.coverage.exclusions=**/migrations/**,**/tests/**,**/templates/**,**/static/**
          -Dsonar.exclusions=**/migrations/**,**/tests/**,**/templates/**,**/static/**
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}